//Install the packages

npm install @opentelemetry/sdk-trace-web \
            @opentelemetry/sdk-trace-base \
            @opentelemetry/exporter-trace-otlp-http \
            @opentelemetry/instrumentation \
            @opentelemetry/instrumentation-fetch \
            @opentelemetry/instrumentation-xml-http-request \
            @opentelemetry/instrumentation-document-load

//If you are using React Router, also install:
npm install @opentelemetry/instrumentation-react-router

//Create src/otel.js 

import { WebTracerProvider } from '@opentelemetry/sdk-trace-web';
import { ConsoleSpanExporter, SimpleSpanProcessor } from '@opentelemetry/sdk-trace-base';
import { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';
import { registerInstrumentations } from '@opentelemetry/instrumentation';
import { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';
import { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';
import { DocumentLoadInstrumentation } from '@opentelemetry/instrumentation-document-load';
import { Resource } from '@opentelemetry/resources';
import { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';

// ðŸ”¹ Initialize Web Tracer Provider with service name
const provider = new WebTracerProvider({
    resource: new Resource({
        [SemanticResourceAttributes.SERVICE_NAME]: 'react-frontend', // Adjust as per your setup
    }),
});

// ðŸ”¹ Set up the OTLP HTTP exporter (adjust endpoint as per your OTEL Collector)
const exporter = new OTLPTraceExporter({
    url: 'http://192.168.1.229:4318/v1/traces', // OTLP HTTP endpoint from OTEL Collector config
});

// ðŸ”¹ Add span processors
provider.addSpanProcessor(new SimpleSpanProcessor(exporter));
provider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter())); // Logs traces to console

// ðŸ”¹ Register the provider
provider.register();

// ðŸ”¹ Auto-instrument fetch, XHR, and page load
registerInstrumentations({
    instrumentations: [
        new FetchInstrumentation(),
        new XMLHttpRequestInstrumentation(),
        new DocumentLoadInstrumentation(), // Captures initial page load trace
    ],
});

console.log('âœ… OpenTelemetry initialized for React frontend');

//To ensure OpenTelemetry is initialized before the app loads:
//ðŸ“‚ HRMS/Client/src/index.jsx

import './otel'; // Import OpenTelemetry setup
import React from "react";
import { BrowserRouter } from "react-router-dom";
import { createRoot } from "react-dom/client";
import { ToastContainer } from "react-toastify";
import 'react-toastify/dist/ReactToastify.css';

import App from "./App";

const container = document.getElementById("root");
const root = createRoot(container);

root.render(
  <BrowserRouter>
    <ToastContainer limit={3} style={{ marginTop: "50px" }} />
    <App />
  </BrowserRouter>
);

//run the client
npm start -- --host

---